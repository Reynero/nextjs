{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Freddy\\\\Desktop\\\\React\\\\nextjs-project2\\\\pages\\\\[meetupId].js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      descrip: props.meetupData.descrip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Freddy/Desktop/React/nextjs-project2/pages/[meetupId].js"],"names":["Head","MeetupDetail","MeetupDetails","props","meetupData","title","image","address","descrip"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI,QAAC,YAAD;AACA,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KADxB;AAEA,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAFxB;AAGA,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ1B;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA,kBADJ;AAeH,CAhBD;;KAAMN,a;;AA4DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = (props) => {\r\n    return(\r\n        <>  \r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name=\"description\" content={props.meetupData.title}/>\r\n            </Head>\r\n            <MeetupDetail \r\n            image={props.meetupData.image}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            descrip={props.meetupData.descrip}\r\n            />\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const client = await MongoClient.connect(\"mongodb+srv://reynero96:chubaca320@cluster0.doojxmi.mongodb.net/\");\r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    //this means that you can go to localhost/new-meetup/m1 and localhost/new-meetup/m2\r\n    //because you only have until meetupId: \"m2\"\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\r\n        \r\n    }\r\n}\r\nexport async function getStaticProps(context){\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://reynero96:chubaca320@cluster0.doojxmi.mongodb.net/\");\r\n    const db = client.db();\r\n\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n    const selectedMeetup = await meetupCollection.findOne({_id: new ObjectId(meetupId)});\r\n\r\n    client.close();\r\n    //fetch data for a single meetup\r\n    return{\r\n        props:{\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                image: selectedMeetup.image,\r\n                address: selectedMeetup.address,\r\n                descrip: selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}